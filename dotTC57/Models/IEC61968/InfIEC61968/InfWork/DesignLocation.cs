///////////////////////////////////////////////////////////
//  DesignLocation.cs
//  Implementation of the Class DesignLocation
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:05 AM
///////////////////////////////////////////////////////////

namespace TC57CIM.IEC61968.InfIEC61968.InfWork {
	/// <summary>
	/// A logical part of the design (e.g., pole and all equipment on a pole). This
	/// includes points and spans.
	/// </summary>
	public class DesignLocation : WorkIdentifiedObject {

		/// <summary>
		/// The legth of the span from the previous pole to this pole.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Length? spanLength;
		/// <summary>
		/// The status
		/// </summary>
		public TC57CIM.IEC61968.Common.Status? status;
		/// <summary>
		/// The condition factors
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfWork.ConditionFactor? ConditionFactors;
		/// <summary>
		/// The designs
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfWork.Design? Designs;
		/// <summary>
		/// The design location us
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfWork.DesignLocationCU? DesignLocationCUs;
		/// <summary>
		/// The work locations
		/// </summary>
		public TC57CIM.IEC61968.Work.WorkLocation? WorkLocations;
		/// <summary>
		/// The misc cost items
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfWork.MiscCostItem? MiscCostItems;

		/// <summary>
		/// Initializes a new instance of the <see cref="DesignLocation"/> class
		/// </summary>
		public DesignLocation(){

		}

    /// <summary>
    /// Disposes this instance
    /// </summary>
    public override void Dispose(){

		}

	}//end DesignLocation

}//end namespace InfWork
