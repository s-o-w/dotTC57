///////////////////////////////////////////////////////////
//  PotentialTransformerInfo.cs
//  Implementation of the Class PotentialTransformerInfo
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:20 AM
///////////////////////////////////////////////////////////

using Assets = TC57CIM.IEC61968.AssetInfo.Assets;
namespace TC57CIM.IEC61968.InfIEC61968.InfAssetInfo {
	/// <summary>
	/// Properties of potential transformer asset.
	/// </summary>
	public class PotentialTransformerInfo : Assets.AssetInfo {

		/// <summary>
		/// The accuracy
		/// </summary>
		public string? accuracyClass;
		/// <summary>
		/// The nominal ratio
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfCommon.Ratio? nominalRatio;
		/// <summary>
		/// Ratio for the primary winding tap changer.
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfCommon.Ratio? primaryRatio;
		/// <summary>
		/// The pt
		/// </summary>
		public string? ptClass;
		/// <summary>
		/// Rated voltage on the primary side.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage? ratedVoltage;
		/// <summary>
		/// Ratio for the secondary winding tap changer.
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfCommon.Ratio? secondaryRatio;
		/// <summary>
		/// Ratio for the tertiary winding tap changer.
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfCommon.Ratio? tertiaryRatio;

		/// <summary>
		/// Initializes a new instance of the <see cref="PotentialTransformerInfo"/> class
		/// </summary>
		public PotentialTransformerInfo(){

		}

    /// <summary>
    /// Disposes this instance
    /// </summary>
    public override void Dispose(){

		}

	}//end PotentialTransformerInfo

}//end namespace InfAssetInfo
