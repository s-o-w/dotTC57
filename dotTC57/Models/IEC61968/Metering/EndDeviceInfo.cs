///////////////////////////////////////////////////////////
//  EndDeviceInfo.cs
//  Implementation of the Class EndDeviceInfo
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:07 AM
///////////////////////////////////////////////////////////

using Assets = TC57CIM.IEC61968.AssetInfo.Assets;
namespace TC57CIM.IEC61968.Metering {
	/// <summary>
	/// End device data.
	/// </summary>
	public class EndDeviceInfo : Assets.AssetInfo {

		/// <summary>
		/// Inherent capabilities of the device (i.e., the functions it supports).
		/// </summary>
		public EndDeviceCapability capability;
		/// <summary>
		/// If true, this is a solid state end device (as opposed to a mechanical or
		/// electromechanical device).
		/// </summary>
		public bool isSolidState;
		/// <summary>
		/// Number of potential phases the end device supports, typically 0, 1 or 3.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer phaseCount;
		/// <summary>
		/// Rated current.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.CurrentFlow ratedCurrent;
		/// <summary>
		/// Rated voltage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage ratedVoltage;

		/// <summary>
		/// Initializes a new instance of the <see cref="EndDeviceInfo"/> class
		/// </summary>
		public EndDeviceInfo(){

		}

		~EndDeviceInfo(){

		}

		/// <summary>
		/// Disposes this instance
		/// </summary>
		public override void Dispose(){

		}

	}//end EndDeviceInfo

}//end namespace Metering