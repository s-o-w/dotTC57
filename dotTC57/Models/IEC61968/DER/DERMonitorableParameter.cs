///////////////////////////////////////////////////////////
//  DERMonitorableParameter.cs
//  Implementation of the Class DERMonitorableParameter
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:05 AM
//  Original author: marga
///////////////////////////////////////////////////////////

namespace TC57CIM.IEC61968.DER {
	/// <summary>
	/// To define the DER monitorable parameters that will be forecasted and dispatched
	/// for a DER Group.  Each parameter is represented as a Y Value at a point in time
	/// or on a curve as a function of time, which is represented on the X axis.
	/// </summary>
	public class DERMonitorableParameter {

		/// <summary>
		/// Defines the specific engineering value being forecasted or dispatched.
		/// </summary>
		public DERParameterKind DERParameter;
		/// <summary>
		/// Kind of flow direction for reading/measured  values proper to some commodities
		/// such as, for example, energy, power, demand.
		/// </summary>
		public TC57CIM.IEC61968.Metering.FlowDirectionKind? flowDirection;
		/// <summary>
		/// The UnitMultiplier that is applied to the DERMonitorableParameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.UnitMultiplier? yMultiplier;
		/// <summary>
		/// The DERUnitSymbol that is applied to the DERMonitorableParameter
		/// </summary>
		public DERUnitSymbol yUnit;
		/// <summary>
		/// The maximum value of the DERMonitorableParameter based on the installed
		/// capacity.
		/// </summary>
		public float yUnitInstalledMax;
		/// <summary>
		/// The minimum value of the DERMonitorableParameter based on the installed
		/// capacity.
		/// </summary>
		public float yUnitInstalledMin;

		/// <summary>
		/// Initializes a new instance of the <see cref="DERMonitorableParameter"/> class
		/// </summary>
		public DERMonitorableParameter(){

		}

    /// <summary>
    /// Disposes this instance
    /// </summary>
    public virtual void Dispose(){

		}

	}//end DERMonitorableParameter

}//end namespace DER
