///////////////////////////////////////////////////////////
//  BatteryUnit.cs
//  Implementation of the Class BatteryUnit
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:41 AM
//  Original author: selaost1
///////////////////////////////////////////////////////////

namespace TC57CIM.IEC61970.Base.Generation.Production {
	/// <summary>
	/// An electrochemical energy storage device.
	/// </summary>
	public class BatteryUnit : PowerElectronicsUnit {

		/// <summary>
		/// The current state of the battery (charging, full, etc.).
		/// </summary>
		public BatteryStateKind batteryState;
		/// <summary>
		/// Full energy storage capacity of the battery. The attribute shall be a positive
		/// value.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.RealEnergy ratedE;
		/// <summary>
		/// Amount of energy currently stored. The attribute shall be a positive value or
		/// zero and lower than BatteryUnit.ratedE.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.RealEnergy storedE;

		/// <summary>
		/// Initializes a new instance of the <see cref="BatteryUnit"/> class
		/// </summary>
		public BatteryUnit(){

		}

		~BatteryUnit(){

		}

		/// <summary>
		/// Disposes this instance
		/// </summary>
		public override void Dispose(){

		}

	}//end BatteryUnit

}//end namespace Production